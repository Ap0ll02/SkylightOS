using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.InputSystem;

public class PauseMenu : MonoBehaviour
{
    public GameObject pauseMenuUI; // Reference to the Pause Menu UI  

    private bool isPaused = false;
    private InputSystem_Actions playerInput; // Reference to the generated Input System actions
    private InputAction pauseAction; // Define an InputAction for pause  

    private void Awake()
    {
        // Initialize the InputAction for pause  
        playerInput = new InputSystem_Actions(); // Assuming you have a PlayerInput class generated by the Input System  
        pauseAction = playerInput.User.Pause;
        Resume();
    }

    private void OnEnable()
    {
        // Subscribe to the pause action  
        pauseAction.performed += OnPauseAction;
        playerInput.User.Enable(); // Enable the action map
    }

    private void OnDisable()
    {
        // Unsubscribe from the pause action  
        pauseAction.performed -= OnPauseAction;
        playerInput.User.Disable(); // Disable the action map to prevent leaks
    }

    private void OnPauseAction(InputAction.CallbackContext context)
    {
        if (isPaused)
        {
            Resume();
        }
        else
        {
            Pause();
        }
    }

    public void Resume()
    {
        pauseMenuUI.SetActive(false); // Hide the Pause Menu UI  
        Time.timeScale = 1f; // Resume the game  
        isPaused = false;
    }

    public void Pause()
    {
        pauseMenuUI.SetActive(true); // Show the Pause Menu UI  
        Time.timeScale = 0f; // Stop the game  
        isPaused = true;
    }

    public void ExitGame()
    {
        Debug.Log("Exiting to Level0...");
        Time.timeScale = 1f; // Ensure the game is unpaused before loading the level  
        UnityEngine.SceneManagement.SceneManager.LoadScene("Level0"); // Load Level0  
    }
}
